# This workflow builds and deploys the Flutter web app to Firebase Hosting.
# It handles both staging (on push to main) and production (on git tag).

name: Deploy Frontend

on:
  push:
    branches:
      - main # Triggers on push to the main branch
    tags:
      - 'v*' # Triggers on a new version tag (e.g., v1.0.0)
    paths:
      - 'lib/**'
      - '.github/workflows/frontend.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get
        working-directory: ./frontend

      - name: Build Flutter Web App
        run: flutter build web --release
        working-directory: ./frontend

      # This step deploys to a PREVIEW channel on pushes to main
      - name: Deploy to Firebase Hosting (Preview)
        if: github.ref == 'refs/heads/main'
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_FORESEE_CYCLES }}'
          projectId: ${{ secrets.GCP_PROJECT_ID }}
          entryPoint: ./frontend
          channelId: 'preview-${{ github.sha }}' # Creates a unique preview URL

      # This step deploys to the LIVE channel on a new version tag
      - name: Deploy to Firebase Hosting (Production)
        if: startsWith(github.ref, 'refs/tags/v')
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_FORESEE_CYCLES }}'
          projectId: ${{ secrets.GCP_PROJECT_ID }}
          entryPoint: ./frontend
          channelId: live
