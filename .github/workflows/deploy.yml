name: Production Deployment

on:
  push:
    tags:
      - 'v*'

jobs:
  # Deploy Frontend to Firebase
  deploy-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'

      - name: Enable web
        run: flutter config --enable-web

      - name: Get dependencies
        run: flutter pub get

      - name: Build web
        run: flutter build web --release

      - name: Deploy to Firebase Hosting
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  # Deploy Backend to Google Cloud Run
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Setup Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true

      - name: Configure Docker for GCP
        run: gcloud auth configure-docker

      - name: Build and push Docker image
        run: |
          cd backend
          docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/foresee-cycles-backend:${{ github.ref_name }} .
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/foresee-cycles-backend:${{ github.ref_name }}

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy foresee-cycles-backend \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/foresee-cycles-backend:${{ github.ref_name }} \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated \
            --set-env-vars "FLASK_ENV=production" \
            --memory 1Gi \
            --cpu 1 \
            --max-instances 10

      - name: Get Cloud Run URL
        id: get-url
        run: |
          URL=$(gcloud run services describe foresee-cycles-backend \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --format 'value(status.url)')
          echo "url=$URL" >> $GITHUB_OUTPUT

  # Create GitHub Release
  create-release:
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-backend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## ðŸš€ Production Release
            
            ### Frontend Changes
            - Deployed to Firebase Hosting
            - Flutter web build optimized
            
            ### Backend Changes
            - Deployed to Google Cloud Run
            - ML API with improved error handling
            - Rate limiting and security enhancements
            
            ### New Features
            - Enhanced prediction accuracy
            - Better error handling
            - Improved API documentation
            - Security improvements
            
            ### Technical Improvements
            - CI/CD pipeline automation
            - Docker containerization
            - Health check endpoints
            - Comprehensive logging
            - Google Cloud Platform deployment
            
            ### Deployment URLs
            - Frontend: https://foresee-cycles.web.app
            - Backend: ${{ needs.deploy-backend.outputs.url }}
          draft: false
          prerelease: false

  # Notify deployment success
  notify-deployment:
    runs-on: ubuntu-latest
    needs: [create-release]
    steps:
      - name: Notify deployment success
        run: |
          echo "ðŸš€ Production deployment completed successfully!"
          echo "Frontend: https://foresee-cycles.web.app"
          echo "Backend: ${{ needs.deploy-backend.outputs.url }}"
          echo "Release: ${{ github.ref }}"
